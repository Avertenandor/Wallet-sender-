#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ WalletSender Modular —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import sys
import os
from pathlib import Path

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("=" * 60)
    print("–ü–†–û–í–ï–†–ö–ê –ó–ê–í–ò–°–ò–ú–û–°–¢–ï–ô")
    print("=" * 60)
    
    required_packages = {
        'PyQt5': 'PyQt5',
        'web3': 'Web3',
        'eth_account': 'eth-account',
        'pandas': 'pandas',
        'qdarkstyle': 'qdarkstyle',
        'aiohttp': 'aiohttp',
        'requests': 'requests',
        'sqlalchemy': 'SQLAlchemy'
    }
    
    missing = []
    
    for module, package in required_packages.items():
        try:
            __import__(module)
            print(f"‚úÖ {package} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except ImportError:
            print(f"‚ùå {package} –ù–ï —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
            missing.append(package)
    
    if missing:
        print("\n‚ùó –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:")
        print(f"pip install {' '.join(missing)}")
        return False
    
    print("\n‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    return True

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    # –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
    current_dir = Path(__file__).parent
    src_path = current_dir / "src"
    if str(src_path) not in sys.path:
        sys.path.insert(0, str(src_path))
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    dirs_to_create = [
        current_dir / "logs",
        current_dir / "data",
        current_dir / "backups",
        current_dir / "rewards_configs"
    ]
    
    for dir_path in dirs_to_create:
        dir_path.mkdir(parents=True, exist_ok=True)
    
    print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ")

def create_default_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
    config_path = Path(__file__).parent / "config.json"
    
    if not config_path.exists():
        import json
        
        default_config = {
            "version": "2.0.0",
            "network": "bsc_mainnet",
            "rpc_urls": {
                "bsc_mainnet": "https://bsc-dataseed.binance.org/",
                "bsc_testnet": "https://data-seed-prebsc-1-s1.binance.org:8545/"
            },
            "bscscan_api_keys": [
                "RF1Q8SCFHFD1EVAP5A4WCMIM4DREA7UNUH",
                "U89HXHR9Y26CHMWAA9JUZ17YK2AAXS65CZ",
                "RAI3FTD9W53JPYZ2AHW8IBH9BXUC71NRH1"
            ],
            "gas_settings": {
                "default_gas_price": 5,
                "default_gas_limit": 100000,
                "auto_estimate": False
            },
            "tokens": {
                "PLEX ONE": "0xdf179b6cadbc61ffd86a3d2e55f6d6e083ade6c1",
                "USDT": "0x55d398326f99059ff775485246999027b3197955"
            },
            "ui": {
                "theme": "dark",
                "language": "ru",
                "window_width": 1400,
                "window_height": 900
            }
        }
        
        with open(config_path, 'w', encoding='utf-8') as f:
            json.dump(default_config, f, indent=2, ensure_ascii=False)
        
        print("‚úÖ –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")
    else:
        print("‚úÖ –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–ê–ü–£–°–ö WALLETSENDER MODULAR")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if not check_dependencies():
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º!")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
    
    print("\n" + "=" * 60)
    print("–ù–ê–°–¢–†–û–ô–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("=" * 60)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    setup_environment()
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    create_default_config()
    
    print("\n" + "=" * 60)
    print("–ó–ê–ü–£–°–ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        from wallet_sender.qt_compat import enable_high_dpi, QT_BACKEND
        from PyQt5.QtWidgets import QApplication, QMessageBox
        from PyQt5.QtCore import Qt
        import qdarkstyle
        
        from wallet_sender.ui.main_window import MainWindow
        from wallet_sender import __version__
        from wallet_sender.utils.logger import setup_logger
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞
        logger = setup_logger("WalletSender_Modular", "wallet_sender_modular.log")
        logger.info(f"üöÄ –ó–∞–ø—É—Å–∫ WalletSender Modular v{__version__}")
        logger.info(f"Qt –±—ç–∫–µ–Ω–¥: {QT_BACKEND}")
        
        # –í–∫–ª—é—á–∞–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É High DPI
        enable_high_dpi()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Qt
        app = QApplication(sys.argv)
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        try:
            app.setStyleSheet(qdarkstyle.load_stylesheet_pyqt5())
            print("‚úÖ –¢–µ–º–Ω–∞—è —Ç–µ–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–∏–º–µ–Ω–∏—Ç—å —Ç–µ–º—É: {e}")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        print("–°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞...")
        window = MainWindow()
        window.show()
        
        print("‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("\n" + "=" * 60)
        print("–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –¥–ª—è –≤—ã—Ö–æ–¥–∞.")
        print("=" * 60)
        
        # –ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ —Å–æ–±—ã—Ç–∏–π
        return app.exec_()
        
    except ImportError as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞")
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1
        
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        
        try:
            if 'app' in locals():
                QMessageBox.critical(None, "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞", 
                                   f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:\n{e}")
        except:
            pass
        
        input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
        return 1

if __name__ == "__main__":
    sys.exit(main())
