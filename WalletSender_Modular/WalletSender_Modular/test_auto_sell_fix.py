#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è AutoSellExecutor –≤ JobEngine
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ auto_sell —Ä–µ–∂–∏–º –±–æ–ª—å—à–µ –Ω–µ –ø–∞–¥–∞–µ—Ç —Å "Unknown job mode"
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ Python path
current_dir = Path(__file__).parent
src_path = current_dir / "src"
if str(src_path) not in sys.path:
    sys.path.insert(0, str(src_path))

def test_auto_sell_mode():
    """–¢–µ—Å—Ç, —á—Ç–æ AutoSellExecutor –¥–æ–±–∞–≤–ª–µ–Ω –≤ JobEngine"""
    print("[–¢–ï–°–¢] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è auto_sell —Ä–µ–∂–∏–º–∞ –≤ JobEngine")
    print("=" * 60)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º JobEngine
        from wallet_sender.core.job_engine import JobEngine, AutoSellExecutor
        
        print("[OK] JobEngine –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        print("[OK] AutoSellExecutor –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ AutoSellExecutor —è–≤–ª—è–µ—Ç—Å—è –∫–ª–∞—Å—Å–æ–º
        if hasattr(AutoSellExecutor, '__init__'):
            print("[OK] AutoSellExecutor –∏–º–µ–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä")
        
        if hasattr(AutoSellExecutor, 'run'):
            print("[OK] AutoSellExecutor –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥ run()")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
        try:
            from wallet_sender.constants import ERC20_ABI
            print("[OK] ERC20_ABI –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"[WARNING] ERC20_ABI –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        
        try:
            from web3 import Web3
            print("[OK] Web3 –¥–æ—Å—Ç—É–ø–µ–Ω")
        except ImportError as e:
            print(f"[ERROR] Web3 –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
            return False
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä JobEngine (–Ω–µ –∑–∞–ø—É—Å–∫–∞–µ–º)
        engine = JobEngine()
        print("[OK] JobEngine —Å–æ–∑–¥–∞–Ω –±–µ–∑ –æ—à–∏–±–æ–∫")
        
        print("")
        print("[SUCCESS] –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!")
        print("[INFO] auto_sell —Ä–µ–∂–∏–º —Ç–µ–ø–µ—Ä—å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è")
        print("[INFO] AutoSellExecutor –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        return True
        
    except ImportError as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        return False
    except Exception as e:
        print(f"[ERROR] –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_job_engine_modes():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ä–µ–∂–∏–º–æ–≤ –≤ JobEngine"""
    print("\n[–¢–ï–°–¢] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ä–µ–∂–∏–º–æ–≤ JobEngine")
    print("=" * 50)
    
    try:
        from wallet_sender.core.job_engine import (
            JobEngine, DistributionExecutor, AutoBuyExecutor, 
            AutoSellExecutor, RewardsExecutor
        )
        
        supported_modes = [
            ('distribution', DistributionExecutor),
            ('auto_buy', AutoBuyExecutor), 
            ('auto_sell', AutoSellExecutor),
            ('rewards', RewardsExecutor)
        ]
        
        print("–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–µ–∂–∏–º—ã:")
        for mode, executor_class in supported_modes:
            print(f"  - {mode}: {executor_class.__name__}")
        
        print(f"\n[OK] –í—Å–µ–≥–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è {len(supported_modes)} —Ä–µ–∂–∏–º–æ–≤")
        print("[INFO] –†–µ–∂–∏–º 'auto_sell' –¥–æ–±–∞–≤–ª–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é")
        
        return True
        
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Ä–µ–∂–∏–º–æ–≤: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –¢–ï–°–¢ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø AUTO_SELL –í JOBENGINE")
    print("–î–∞—Ç–∞:", "11 —Å–µ–Ω—Ç—è–±—Ä—è 2025")
    print("")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    test1_passed = test_auto_sell_mode()
    test2_passed = test_job_engine_modes()
    
    print("\n" + "=" * 60)
    if test1_passed and test2_passed:
        print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ auto_sell —Ä–µ–∂–∏–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω")
        print("‚úÖ AutoSellExecutor –¥–æ–±–∞–≤–ª–µ–Ω")
        print("‚úÖ 'Unknown job mode' –æ—à–∏–±–∫–∞ —É—Å—Ç—Ä–∞–Ω–µ–Ω–∞")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ")
    
    print("\n–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω.")
