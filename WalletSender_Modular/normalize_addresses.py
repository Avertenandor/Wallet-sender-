#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥—Ä–µ—Å–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ 01.09_–ì–ï–ù–ê_50.txt
"""

from web3 import Web3
from pathlib import Path
import sys

def normalize_addresses(input_file: str, output_file: str = None):
    """
    –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∞–¥—Ä–µ—Å–æ–≤ –≤ checksum —Ñ–æ—Ä–º–∞—Ç –∏ —É–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    
    Args:
        input_file: –ü—É—Ç—å –∫ –∏—Å—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
        output_file: –ü—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É (–µ—Å–ª–∏ None, –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è _normalized)
    """
    
    input_path = Path(input_file)
    if not input_path.exists():
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {input_file}")
        return False
    
    if output_file is None:
        output_file = input_path.stem + "_normalized" + input_path.suffix
    
    print(f"üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {input_file}")
    
    # –ß–∏—Ç–∞–µ–º –∞–¥—Ä–µ—Å–∞
    with open(input_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    
    print(f"üìã –ü—Ä–æ—á–∏—Ç–∞–Ω–æ —Å—Ç—Ä–æ–∫: {len(lines)}")
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥—Ä–µ—Å–æ–≤
    valid_addresses = set()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º set –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
    invalid_lines = []
    duplicates = 0
    
    for i, line in enumerate(lines, 1):
        line = line.strip()
        
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
        if not line:
            continue
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∞–¥—Ä–µ—Å–∞
        if Web3.is_address(line):
            # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤ checksum —Ñ–æ—Ä–º–∞—Ç
            checksum_address = Web3.to_checksum_address(line)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç
            if checksum_address in valid_addresses:
                duplicates += 1
                print(f"  ‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ {i}: –î—É–±–ª–∏–∫–∞—Ç {checksum_address[:10]}...")
            else:
                valid_addresses.add(checksum_address)
        else:
            invalid_lines.append((i, line))
            print(f"  ‚ùå –°—Ç—Ä–æ–∫–∞ {i}: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π –∞–¥—Ä–µ—Å: {line[:20]}...")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∞–¥—Ä–µ—Å–∞
    output_path = Path(output_file)
    with open(output_path, 'w', encoding='